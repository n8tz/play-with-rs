version: '3'
volumes:
  node_modules:
  emptyDockerDir:
networks:
  app_network:
services:
  traefik:
    image: "traefik:v2.0.0"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app_network
  app:
    restart: always
    build:
      context: .
    working_dir: /home/app
    command: bash -c "npm i&&wi-run :${APP_MODE:-dev} start -p 8080"
    #
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - 'traefik.protocol=http'
    environment:
      - mongoUrl=mongodb://mongodb:27017
      - redisUrl=redis://redis:6379
      - APP_DOMAIN=${APP_DOMAIN}
      - APP_MODE=${APP_MODE}
    #      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../..:/home/app
      - ../../node_modules:/home/app/node_modules
      - ../../dump:/home/app/dump
    links:
      - mongodb
      - redis
    depends_on:
      - mongodb
      - redis
    expose:
      - "8080"
    networks:
      - app_network
  mongodb:
    image: mongo
    restart: always
    command: --quiet
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - ../../docker/mongodb:/data
    expose:
      - 27017
    networks:
      - app_network
  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: always
    expose:
      - 6379
    networks:
      - app_network
    volumes:
      - ../../docker/redis-data:/data